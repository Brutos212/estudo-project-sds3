{"ast":null,"code":"var _jsxFileName = \"/home/aluno/Dev212/ws-devsuperior/estudo-project-sds3/frontend/src/components/DonutChart/index.tsx\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\nimport { BASE_URL } from \"utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  // FORMA ERRADA\n  let chartData = {\n    labels: [],\n    series: []\n  }; // FORMA ERRADA\n\n  axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n    const data = response.data;\n    const myLabel;\n    console.log(response.data);\n  }); //const mockData = {\n  //    series: [477138, 499928, 444867, 220426, 473088],\n  //    labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n  //}\n\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: chartData.labels\n    },\n    series: chartData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["/home/aluno/Dev212/ws-devsuperior/estudo-project-sds3/frontend/src/components/DonutChart/index.tsx"],"names":["axios","Chart","BASE_URL","DonutChart","chartData","labels","series","get","then","response","data","myLabel","console","log","options","legend","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;AAQA,MAAMC,UAAU,GAAG,MAAM;AAEjB;AAEA,MAAIC,SAAqB,GAAG;AAACC,IAAAA,MAAM,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAC;AAApB,GAA5B,CAJiB,CAMjB;;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAW,GAAEL,QAAS,yBAAtB,EACKM,IADL,CACUC,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMC,OAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAArB;AACH,GANL,EAPiB,CAerB;AACA;AACA;AACA;;AAEA,QAAMI,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAE,GAAGF,OAAL;AAAcT,MAAAA,MAAM,EAAED,SAAS,CAACC;AAAhC,KADb;AAEI,IAAA,MAAM,EAAED,SAAS,CAACE,MAFtB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlCD;;KAAMH,U;AAoCN,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\nimport { type } from \"node:os\";\nimport Chart from \"react-apexcharts\";\nimport { SaleSum } from \"types/sale\";\nimport { BASE_URL } from \"utils/requests\";\n\ntype ChartData = {\n    labels: string[];\n    series: number[];\n}\n\n\nconst DonutChart = () => {\n\n        // FORMA ERRADA\n\n        let chartData : ChartData = {labels: [], series:[]};\n\n        // FORMA ERRADA\n        axios.get(`${BASE_URL}/sales/amount-by-seller`)\n            .then(response => {\n                const data = response.data as SaleSum[];\n                const myLabel\n\n                console.log(response.data);\n            })\n\n    //const mockData = {\n    //    series: [477138, 499928, 444867, 220426, 473088],\n    //    labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n    //}\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n\n    return (\n        <Chart\n            options={{ ...options, labels: chartData.labels }}\n            series={chartData.series}\n            type=\"donut\"\n            height=\"240\"\n        />\n    )\n}\n\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}