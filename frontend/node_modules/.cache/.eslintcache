[{"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/index.tsx":"1","/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/App.tsx":"2","/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/NavBar/index.tsx":"3","/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/Footer/index.tsx":"4","/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/DataTable/index.tsx":"5","/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/BarChart/index.tsx":"6","/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/DonutChart/index.tsx":"7"},{"size":275,"mtime":1620183315518,"results":"8","hashOfConfig":"9"},{"size":941,"mtime":1620253396680,"results":"10","hashOfConfig":"9"},{"size":481,"mtime":1620224729902,"results":"11","hashOfConfig":"9"},{"size":627,"mtime":1620226686106,"results":"12","hashOfConfig":"9"},{"size":3127,"mtime":1620247417937,"results":"13","hashOfConfig":"9"},{"size":689,"mtime":1620249571279,"results":"14","hashOfConfig":"9"},{"size":534,"mtime":1620253338130,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"k7iwvt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/index.tsx",[],["32","33"],"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/App.tsx",[],"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/NavBar/index.tsx",[],"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/Footer/index.tsx",[],"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/DataTable/index.tsx",[],"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/BarChart/index.tsx",[],"/home/aluno/Dev212/ws-devsuperior/projeto-sds3/frontend/src/components/DonutChart/index.tsx",["34"],"import Chart from \"react-apexcharts\";\n\n\nconst DonutChart = () => {\n\n    const mockData = {\n        series: [477138, 499928, 444867, 220426, 473088],\n        labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padm√©']\n    }\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n\n    return (\n        <Chart\n            options={{ ...options, xaxis: mockData.labels }}\n            series={mockData.series}\n            type=\"donut\"\n            height=\"240\"\n        />\n    )\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":7,"nodeType":"41","messageId":"42","endLine":4,"endColumn":17},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'DonutChart' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]